@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BookOrganiser.Models.Book

@{
    ViewData["Title"] = "Details";
    var textInfo = new CultureInfo("en-GB", false).TextInfo;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>
<div class="mb-3">
    <form asp-controller="Home" asp-action="Index" method="get">
        <button type="submit" class="btn btn-success">Back</button>
    </form>
</div>
<div>
    <h1>Book</h1>
    <hr/>
    <dl class="row">
        @if (Model.Title != string.Empty)
        {
            <dt class="col-sm-2">
                Title
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>
        }
        @if (Model.Subtitle != string.Empty)
        {
            <dt class="col-sm-2">
                Subtitle
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Subtitle)
            </dd>
        }
        @if (Model.Authors.Any())
        {
            <dt class="col-sm-2">
                Author(s)
            </dt>
            <dd class="col-sm-10">
                @string.Join(", ", Model.Authors)
            </dd>
        }
        @if (Model.Publisher != string.Empty)
        {
            <dt class="col-sm-2">
                Publisher
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Publisher)
            </dd>
        }
        @if (Model.PublishedDate != string.Empty)
        {
            <dt class="col-sm-2">
                Year Published
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PublishedDate)
            </dd>
        }
        @if (Model.Description != string.Empty)
        {
            <dt class="col-sm-2">
                Description
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.Description)
            </dd>
        }
        @if (Model.ISBN10 != string.Empty)
        {
            <dt class="col-sm-2">
                ISBN-10
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ISBN10)
            </dd>
        }
        @if (Model.ISBN13 != string.Empty)
        {
            <dt class="col-sm-2">
                ISBN-13
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ISBN13)
            </dd>
        }
        @if (Model.ISSN != string.Empty)
        {
            <dt class="col-sm-2">
                ISSN
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ISSN)
            </dd>
        }
        @if (Model.OtherIdentifier != string.Empty)
        {
            <dt class="col-sm-2">
                Other Identifier
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.OtherIdentifier)
            </dd>
        }
        <dt class="col-sm-2">
            Page Count
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PageCount)
        </dd>
        @if (Model.GoogleBooksCategories.Any())
        {
            <dt class="col-sm-2">
                Categories
            </dt>
            <dd class="col-sm-10">
                @string.Join(", ", Model.GoogleBooksCategories)
            </dd>
        }
        @if (Model.CustomCategories.Any())
        {
            <dt class="col-sm-2">
                Custom Categories
            </dt>
            <dd class="col-sm-10">
                @textInfo.ToTitleCase(string.Join(", ", Model.CustomCategories))
            </dd>
        }
        @{ var thumbnail = (Model.Thumbnail != string.Empty) ? Model.Thumbnail : Model.SmallThumbnail; }
        <dt class="col-sm-2">
            Thumbnail
        </dt>
        <dd class="col-sm-10">
            @if (thumbnail != string.Empty)
            {
                <img src="@thumbnail" alt="Thumbnail for @Model.Title."/>
            }
            else
            {
                <img src="~/images/no-cover.jpg" alt="No thumbnail available for @Model.Title." width="130" height="170"/>
            }
        </dd>
    </dl>
    <div>
        <form asp-action="Delete">
            <input type="hidden" asp-for="Id" />
            <button type="submit" class="btn btn-danger">Delete Book From Library</button>
        </form>
    </div>
</div>
<div>
    <hr/>
    @if ((bool)ViewBag.AIEnabled)
    {
        <h1>AI Summary</h1>
        <p>foo</p>
    }
    else
    {
        <div class="alert alert-warning">
            <p>To enable AI features, you must read the disclaimer and opt-in first.</p>
        </div>
    }
</div>
<div>
    <h1>Category Management</h1>
    <hr/>
    @{
        var addCategories = (List<string>)ViewBag.Categories;
        addCategories = addCategories.Except(Model.CustomCategories).ToList();
        <div class="form-group mb-3">
            <form asp-controller="Book" asp-action="AddBookToCategory" method="post">
                <div class="mb-3">
                    <select for="category" name="category" class="form-select" required>
                        <option value="" disabled selected hidden>Please Choose...</option>
                        @foreach (var item in addCategories)
                        {
                            <option value="@item">@textInfo.ToTitleCase(item)</option>
                        }
                    </select>
                </div>
                <input type="hidden" name="id" value="@Model.Id"/>
                <div class="mb-3">
                    <button type="submit" class="btn btn-success">Add Book to Category</button>
                </div>
            </form>
        </div>
    }
    @{
        var removeCategories = (List<string>)ViewBag.Categories;
        removeCategories = removeCategories.Intersect(Model.CustomCategories).ToList();
        <div class="form-group mb-3">
            <form asp-controller="Book" asp-action="RemoveBookFromCategory" method="post">
                <div class="mb-3">
                    <select for="category" name="category" class="form-select" required>
                        <option value="" disabled selected hidden>Please Choose...</option>
                        @foreach (var item in removeCategories)
                        {
                            <option value="@item">@textInfo.ToTitleCase(item)</option>
                        }
                    </select>
                </div>
                <input type="hidden" name="id" value="@Model.Id"/>
                <div class="mb-3">
                    <button type="submit" class="btn btn-danger">Remove Book from Category</button>
                </div>
            </form>
        </div>
    }
</div>
</body>
</html>
