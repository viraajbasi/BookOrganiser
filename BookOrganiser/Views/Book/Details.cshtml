@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BookOrganiser.ViewModels.BookViewModels
@model DetailsViewModel

@{
    ViewData["Title"] = "Details";
    var textInfo = new CultureInfo("en-GB", false).TextInfo;
    var allCategories = Model.Categories;
    var book = Model.Book;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 col-lg-2 sidebar-container">
            <partial name="_BookSideNavPartial" model="@(BookId: book.Id, SummaryId: book.AISummary.Id)" />
        </div>
        <div class="col-md-9 col-lg-10 main-content">
            <h1>Book Details</h1>
            <hr/>
            <dl class="row">
                @if (book.Title != string.Empty)
                {
                    <dt class="col-sm-2">
                        Title
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.Title)
                    </dd>
                }
                @if (book.Subtitle != string.Empty)
                {
                    <dt class="col-sm-2">
                        Subtitle
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.Subtitle)
                    </dd>
                }
                @if (book.Authors.Any())
                {
                    <dt class="col-sm-2">
                        Author(s)
                    </dt>
                    <dd class="col-sm-10">
                        @string.Join(", ", book.Authors)
                    </dd>
                }
                @if (book.Publisher != string.Empty)
                {
                    <dt class="col-sm-2">
                        Publisher
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.Publisher)
                    </dd>
                }
                @if (book.PublishedDate != string.Empty)
                {
                    <dt class="col-sm-2">
                        Year Published
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.PublishedDate)
                    </dd>
                }
                @if (book.Description != string.Empty)
                {
                    <dt class="col-sm-2">
                        Description
                    </dt>
                    <dd class="col-sm-10">
                        @Html.Raw(book.Description)
                    </dd>
                }
                @if (book.ISBN10 != string.Empty)
                {
                    <dt class="col-sm-2">
                        ISBN-10
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.ISBN10)
                    </dd>
                }
                @if (book.ISBN13 != string.Empty)
                {
                    <dt class="col-sm-2">
                        ISBN-13
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.ISBN13)
                    </dd>
                }
                @if (book.ISSN != string.Empty)
                {
                    <dt class="col-sm-2">
                        ISSN
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.ISSN)
                    </dd>
                }
                @if (book.OtherIdentifier != string.Empty)
                {
                    <dt class="col-sm-2">
                        Other Identifier
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => book.OtherIdentifier)
                    </dd>
                }
                <dt class="col-sm-2">
                    Page Count
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => book.PageCount)
                </dd>
                @if (book.UpstreamCategories.Any())
                {
                    <dt class="col-sm-2">
                        Categories
                    </dt>
                    <dd class="col-sm-10">
                        @string.Join(", ", book.UpstreamCategories)
                    </dd>
                }
                @if (book.CustomCategories.Any())
                {
                    <dt class="col-sm-2">
                        Custom Categories
                    </dt>
                    <dd class="col-sm-10">
                        @textInfo.ToTitleCase(string.Join(", ", book.CustomCategories))
                    </dd>
                }
                @{
                    var thumbnail = (book.Thumbnail != string.Empty) ? book.Thumbnail : book.SmallThumbnail; 
                    <dt class="col-sm-2">
                        Thumbnail
                    </dt> 
                    <dd class="col-sm-10">
                        @if (thumbnail != string.Empty)
                        {
                            <img src="@thumbnail" alt="Thumbnail for @book.Title."/>
                        }
                        else
                        {
                            <img src="~/images/no-cover.jpg" alt="No thumbnail available for @book.Title." width="130" height="170"/>
                        }
                    </dd>
                }
            </dl>
            <div class="d-flex justify-content-between flex-wrap">
                <div class="d-flex flex-column">
                    <div class="mb-3">
                        @if (book.CustomCategories.Contains("favourites"))
                        {
                            <form asp-controller="Book" asp-action="RemoveBookFromCategory" method="post">
                                <input type="hidden" id="category" name="category" value="favourites" />
                                <input type="hidden" id="id" name="id" value="@book.Id" />
                                <button type="submit" class="btn btn-warning"><i class="bi bi-star-fill"></i> Remove from Favourites</button>
                            </form>
                        }
                        else
                        {
                            <form asp-controller="Book" asp-action="AddBookToCategory" method="post">
                                <input type="hidden" id="category" name="category" value="favourites" />
                                <input type="hidden" id="id" name="id" value="@book.Id" />
                                <button type="submit" class="btn btn-warning"><i class="bi bi-star"></i> Add to Favourites</button>
                            </form>
                        }
                    </div>
                    <div class="mb-3">
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#categoryModal"><i class="bi bi-pencil-square"></i> Edit Categories</button>
                    </div>
                </div>
                <div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            @{
                                var addCategories = allCategories.Except(book.CustomCategories).ToList();
                                var removeCategories = allCategories.Intersect(book.CustomCategories).ToList();

                                <div class="modal-header">
                                    <h1>Category Management</h1>
                                </div>

                                <div class="modal-body">
                                    @if (addCategories.Any())
                                    {
                                        <div class="form-group mb-3">
                                            <form asp-controller="Book" asp-action="AddBookToCategory" method="post">
                                                <div class="mb-3">
                                                    <select for="category" name="category" class="form-select" required>
                                                        <option value="" disabled selected hidden>Please Choose...</option>
                                                        @foreach (var item in addCategories)
                                                        {
                                                            <option value="@item">@textInfo.ToTitleCase(item)</option>
                                                        }
                                                    </select>
                                                </div>
                                                <input type="hidden" name="id" value="@book.Id"/>
                                                <div class="mb-3">
                                                    <button type="submit" class="btn btn-success"><i class="bi bi-plus-lg"></i> Add Book to Category</button>
                                                </div>
                                            </form>
                                        </div>
                                    }


                                    @if (removeCategories.Any())
                                    {
                                        <div class="form-group mb-3">
                                            <form asp-controller="Book" asp-action="RemoveBookFromCategory" method="post">
                                                <div class="mb-3">
                                                    <select for="category" name="category" class="form-select" required>
                                                        <option value="" disabled selected hidden>Please Choose...</option>
                                                        @foreach (var item in removeCategories)
                                                        {
                                                            <option value="@item">@textInfo.ToTitleCase(item)</option>
                                                        }
                                                    </select>
                                                </div>
                                                <input type="hidden" name="id" value="@book.Id"/>
                                                <div class="mb-3">
                                                    <button type="submit" class="btn btn-danger"><i class="bi bi-dash-lg"></i> Remove Book from Category</button>
                                                </div>
                                            </form>
                                        </div>
                                    }
                                </div>}
                            <div class="modal-footer">
                                <button type="button" class="btn btn-success" data-bs-dismiss="modal"><i class="bi bi-x-lg"></i> Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"><i class="bi bi-trash"></i> Delete Book From Library</button>
                </div>
                <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title" id="deleteModalLabel">Are You Sure?</h1>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to delete this book? <strong>This action is irreversible.</strong></p>
                            </div>
                            <div class="modal-footer d-flex justify-content-between">
                                <form asp-controller="Book" asp-action="DeleteBook">
                                    <input type="hidden" name="id" value="@book.Id" />
                                    <button type="submit" class="btn btn-danger"><i class="bi bi-trash"></i> Delete Book From Library</button>
                                </form>
                                <button type="button" class="btn btn-success" data-bs-dismiss="modal"><i class="bi bi-close"></i> Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>
