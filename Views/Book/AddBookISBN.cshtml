@model IEnumerable<BookOrganiser.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<script>
    async function SendBookToController(item)
    {
        await fetch('/Book/AddBookToDB',
            method: 'POST',
            headers: { 'Content-Type', 'application/json' },
            body: JSON.stringify(item),
        );
    }
</script>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Thumbnail)
            </th>
            <th>
                Options
            </th>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @string.Join(", ", item.Authors)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublishedDate)
            </td>
            <td>
                <img src=@Html.DisplayFor(modelItem => item.Thumbnail) />
            </td>
            <td>
                <a asp-controller="Book" asp-action="AddBookToDB" asp-route-id="@item.Id">Add</a>
            </td>
        </tr>
}
    </tbody>
</table>
</body>
</html>
